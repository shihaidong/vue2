{"version":3,"file":"index1.js","mappings":";;;;;;;;;;;;;;;AAAkC;AACX;AACvB;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,iDAAG;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;;;ACxCD,iEAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,aAAoB;;AAErC;AACA;AACA;AACA,YAAY,aAAoB;;AAEhC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/D+B;AACC;AAChC;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,6CAAM;AACV;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,KAAqC,KAAK,qDAAY;AAC9D;AACA;AACA;AACA;AACA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;;;;;;;;;;;ACxDwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAQ;AACpB;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACnBuB;AAWV;AACyB;AACtC;AACA,6CAA6C,gDAAY;;;AAGzD;AACA;AACA;AACA;AACO;;AAEA;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA,mBAAmB,yCAAG;AACtB;AACA,IAAI,2CAAG;AACP;AACA,UAAU,IAAI;AACd,4BAA4B,gDAAY;AACxC,QAAQ,KAAK,EAEN;AACP;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,YAAY;AACvB,YAAY;AACZ;AACO;AACP;AACA,OAAO,+CAAQ;AACf;AACA;AACA;AACA,MAAM,6CAAM;AACZ;AACA,IAAI;AACJ;AACA;AACA,6BAA6B,oDAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,KAAK;AAChB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yCAAG;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,gDAAU;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,KAAqC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,YAAY;AACZ;AACO;AACP,MAAM,KAAqC;AAC3C,KAAK,8CAAO,YAAY,kDAAW;AACnC;AACA,yFAAyF,SAAS;AAClG;AACA,+BAA+B,wDAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAqC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,KAAK;AAChB;AACO;AACP,MAAM,KAAqC;AAC3C,KAAK,8CAAO,YAAY,kDAAW;AACnC;AACA,4FAA4F,SAAS;AACrG;AACA,+BAA+B,wDAAiB;AAChD;AACA;AACA;AACA;AACA;AACA,IAAI,KAAqC;AACzC;AACA;AACA;AACA;AACA;AACA,OAAO,6CAAM;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACtR0B;;;;;;;;;;;;;;;ACA1B;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,KAAK;AAChB,WAAW,SAAS;AACpB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;;;ACdO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://webpackvue3/./src/js/array.js","webpack://webpackvue3/./src/js/config.js","webpack://webpackvue3/./src/js/dep.js","webpack://webpackvue3/./src/js/index.js","webpack://webpackvue3/./src/js/observer.js","webpack://webpackvue3/./src/js/util/index.js","webpack://webpackvue3/./src/js/util/lang.js","webpack://webpackvue3/./src/js/util/util.js"],"sourcesContent":["import { def } from './util/index'\nimport Dep from './dep'\nconst arrayProto = Array.prototype\nexport const arrayMethods = Object.create(arrayProto)\n\r\n\nconst methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  const original = arrayProto[method]\n  def(arrayMethods, method, function mutator (...args) {\n    const result = original.apply(this, args)\n    const ob = this.__ob__\n    let inserted\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args\n        break\n      case 'splice':\n        inserted = args.slice(2)\n        break\n    }\n    if (inserted) ob.observeArray(inserted)\n    // notify change\n    ob.dep.notify()\n    return result\n  })\n})","export default {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  // _lifecycleHooks: LIFECYCLE_HOOKS\n}","import { remove } from './util'\r\nimport config from './config.js'\r\nlet uid = 0;\r\nexport default class Dep {\n  static target;\n  // id: number;\n  // subs: Array<Watcher>;\n\n  constructor () {\n    this.id = uid++\n    this.subs = []\n  }\n\n  addSub (sub) {\n    this.subs.push(sub)\n  }\n\n  removeSub (sub) {\n    remove(this.subs, sub)\n  }\n\n  depend () {\n    if (Dep.target) {\n      Dep.target.addDep(this)\n    }\n  }\n\n  notify () {\n    // stabilize the subscriber list first\n    const subs = this.subs.slice()\n    if (process.env.NODE_ENV !== 'production' && !config.async) {\n      // subs aren't sorted in scheduler if not running async\n      // we need to sort them now to make sure they fire in correct\n      // order\n      subs.sort((a, b) => a.id - b.id)\n    }\n    for (let i = 0, l = subs.length; i < l; i++) {\n      subs[i].update()\n    }\n  }\n}\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\nDep.target = null\nconst targetStack = []\n\nexport function pushTarget (target) {\n  targetStack.push(target)\n  Dep.target = target\n}\n\nexport function popTarget () {\n  targetStack.pop()\n  Dep.target = targetStack[targetStack.length - 1]\n}","import { Observer } from './observer.js'\r\n\r\nlet s = {\r\n\tname: 'shi',\r\n\tsex: 'male',\r\n\tage: 32,\r\n\taddress: 'xzsf',\r\n\totherInformation: {\r\n\t\tskill: 'computer',\r\n\t\thobbity: 'basketball'\r\n\t}\r\n\t\r\n}\r\n\r\n\r\nlet k = new Observer(s)\r\n\r\n\r\n// k.value = Object.freeze(t)\r\nconsole.log(k.value)","import Dep from './dep'\r\nimport {\r\n\tdef,\r\n\tisObject,\r\n\thasOwn,\r\n\tisPlainObject,\r\n\tisPrimitive,\r\n\tisUndef,\r\n\tisValidArrayIndex,\r\n\tisServerRendering\r\n}\r\nfrom './util'\r\nimport { arrayMethods } from './array'\r\n\r\nconst arrayKeys = Object.getOwnPropertyNames(arrayMethods)\r\n\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nexport let shouldObserve = true\n\nexport function toggleObserving (value) {\n  shouldObserve = value\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nexport class Observer {\n  // value: any;\n  // dep: Dep;\n  // vmCount: number; // number of vms that have this object as root $data\n\n  constructor (value) {\n    this.value = value\n    this.dep = new Dep()\n    this.vmCount = 0\n    def(value, '__ob__', this)\n    if (Array.isArray(value)) {\n      if (true) {\n        protoAugment(value, arrayMethods)\n      } else {\n        copyAugment(value, arrayMethods, arrayKeys)\n      }\n      this.observeArray(value)\n    } else {\n      this.walk(value)\n    }\n  }\n\n  /**\n   * Walk through all properties and convert them into\n   * getter/setters. This method should only be called when\n   * value type is Object.\n   */\n  walk (obj) {\n    const keys = Object.keys(obj)\n    for (let i = 0; i < keys.length; i++) {\n      defineReactive(obj, keys[i])\n    }\n  }\n\n  /**\n   * Observe a list of Array items.\n   */\n  observeArray (items) {\n    for (let i = 0, l = items.length; i < l; i++) {\n      observe(items[i])\n    }\n  }\n}\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\r\n/**\r\n * @param {Object} src \r\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src\n  /* eslint-enable no-proto */\n}\r\n\r\n/**\r\n * @param {any} value \r\n * @param {asRootData} boolean \r\n * @return {Observer | void}  \r\n */\r\nexport function observe (value, asRootData) {\r\n\t//value instanceof VNode\n  if (!isObject(value) || false) {\n    return\n  }\n  let ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__\n  } else if (\n    shouldObserve &&\n    // !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value)\n  }\n  if (asRootData && ob) {\n    ob.vmCount++\n  }\n  return ob\n}\n\n/**\r\n * @param {Object} obj \r\n * @param {String} key \r\n * @param {any} val \r\n * @param {Function} customSetter?\r\n * @param {boolean} shallow?\n * Define a reactive property on an Object.\n */\nexport function defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  const dep = new Dep()\n  const property = Object.getOwnPropertyDescriptor(obj, key)\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  const getter = property && property.get\n  const setter = property && property.set\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key]\n  }\n\n  let childOb = !shallow && observe(val)\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      const value = getter ? getter.call(obj) : val\n      if (Dep.target) {\n        dep.depend()\n        if (childOb) {\n          childOb.dep.depend()\n          if (Array.isArray(value)) {\n            dependArray(value)\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      const value = getter ? getter.call(obj) : val\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter()\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) return\n      if (setter) {\n        setter.call(obj, newVal)\n      } else {\n        val = newVal\n      }\n      childOb = !shallow && observe(newVal)\n      dep.notify()\n    }\n  })\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\r\n * \r\n * @param {Array | Object} target\r\n * @param {any} key\r\n * @param {any} val\r\n * @return {any}  \n */\nexport function set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    console.warn(`Cannot set reactive property on undefined, null, or primitive value: ${(target)}`)\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key)\n    target.splice(key, 1, val)\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val\n    return val\n  }\n  const ob = (target).__ob__\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && console.warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    )\n    return val\n  }\n  if (!ob) {\n    target[key] = val\n    return val\n  }\n  defineReactive(ob.value, key, val)\n  ob.dep.notify()\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\r\n * @param {Array | Object} target\r\n * @param {any} key  \n */\nexport function del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    console.warn(`Cannot delete reactive property on undefined, null, or primitive value: ${(target)}`)\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1)\n    return\n  }\n  const ob = (target).__ob__\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && console.warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    )\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key]\n  if (!ob) {\n    return\n  }\n  ob.dep.notify()\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\r\n * @param {Array} value  \n */\nfunction dependArray (value) {\n  for (let e, i = 0, l = value.length; i < l; i++) {\n    e = value[i]\n    e && e.__ob__ && e.__ob__.dep.depend()\n    if (Array.isArray(e)) {\n      dependArray(e)\n    }\n  }\n}\r\n\r\n\r\n","export  * from './lang.js'\r\nexport * from './util.js'","/**\r\n * @param {Object} obj \r\n * @param {string} key \r\n * @param {val} any \r\n * @param {boolean} enumerable \r\n */\r\n\r\nexport function def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  })\n}","export function isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\r\nexport function isUndef (v) {\n  return v === undefined || v === null\n}\r\n\r\n/**\r\n * check if value is primitive\r\n * @param {Object} value\r\n */\r\nexport function isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\r\n\r\nconst _toString = Object.prototype.toString;\r\n\r\n/**\r\n * Strick object type check. Only returns true for plain JavaScript objects.\r\n */\r\nexport function isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\r\n\r\n/**\r\n * check if val is a valid  array index.\r\n * @param {Object} val\r\n */\r\nexport function isValidArrayIndex (val){\n  const n = parseFloat(String(val))\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\r\n\r\n/**\r\n * check whether a object has the prototype;\r\n * @param {Object} obj \r\n * @param {string} key\r\n */\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nexport function hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\r\n\r\n\r\n/**\n * Remove an item from an array.\r\n * @param {Array} arr  \r\n * @param {any} item\r\n * @return {Array}   \n */\nexport function remove (arr, item) {\n  if (arr.length) {\n    const index = arr.indexOf(item)\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}"],"names":[],"sourceRoot":""}